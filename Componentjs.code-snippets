{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React component WITHOUT typescript": {
		"prefix": "componentjs",
		"body": [
			"import React, { useState } from 'react'",
			"import { createUseStyles } from 'react-jss'",
			"import { handleOnClick } from './ComponentHandlers.js'",
			"import defaultStyle from './ComponentStyles.js'",
			"",
			"const Component = (props) => {",
			"  const styles = { ...defaultStyle, ...props.style }",
			"  const useStyles = createUseStyles(styles)",
			"  const cl = useStyles()",
			"  const childrenElementProps = {",
			"    onClick: () => props.onClick()",
			"  }",
			"",
			"  return (",
			"    <div className={cl.back}>",
			"      ",
			"    </div>",
			"  )",
			"}",
			"",
			"Component.propTypes = {",
			"  onClick: PropTypes.func,",
			"  style: PropTypes.object",
			"}",
			"",
			"export default Component",
			""
		],
		"description": "React component WITHOUT typescript"
	}
}